{"ast":null,"code":"var _jsxFileName = \"/home/hiren/github/it-logger/src/components/techs/techSelectOptions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getTechs } from '../../actions/techActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TechSelectOptions = ({\n  getTechs,\n  tech: {\n    techs,\n    loading\n  }\n}) => {\n  _s();\n\n  useEffect(() => {\n    getTechs(); //eslint-disable-next-line\n  }, []);\n  return !loading && techs !== null && techs.map(t => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: `${t.firstName} ${t.lastName}`,\n    children: [t.firstName, \" \", t.lastName]\n  }, t.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 7\n  }, this));\n};\n\n_s(TechSelectOptions, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = TechSelectOptions;\nTechSelectOptions.propTypes = {\n  tech: PropTypes.object.isRequired,\n  getTechs: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  tech: state.tech\n});\n\nexport default connect(mapStateToProps, {\n  getTechs\n})(TechSelectOptions);\n\nvar _c;\n\n$RefreshReg$(_c, \"TechSelectOptions\");","map":{"version":3,"sources":["/home/hiren/github/it-logger/src/components/techs/techSelectOptions.js"],"names":["React","useEffect","PropTypes","connect","getTechs","TechSelectOptions","tech","techs","loading","map","t","firstName","lastName","id","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,2BAAzB;;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAED,EAAAA,QAAF;AAAYE,EAAAA,IAAI,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAlB,CAAD,KAA4C;AAAA;;AACpEP,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,QAAQ,GADM,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,SACE,CAACI,OAAD,IACAD,KAAK,KAAK,IADV,IAEAA,KAAK,CAACE,GAAN,CAAWC,CAAD,iBACR;AAAmB,IAAA,KAAK,EAAG,GAAEA,CAAC,CAACC,SAAU,IAAGD,CAAC,CAACE,QAAS,EAAvD;AAAA,eACGF,CAAC,CAACC,SADL,OACiBD,CAAC,CAACE,QADnB;AAAA,KAAaF,CAAC,CAACG,EAAf;AAAA;AAAA;AAAA;AAAA,UADF,CAHF;AASD,CAfD;;GAAMR,iB;;KAAAA,iB;AAiBNA,iBAAiB,CAACS,SAAlB,GAA8B;AAC5BR,EAAAA,IAAI,EAAEJ,SAAS,CAACa,MAAV,CAAiBC,UADK;AAE5BZ,EAAAA,QAAQ,EAAEF,SAAS,CAACe,IAAV,CAAeD;AAFG,CAA9B;;AAKA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCb,EAAAA,IAAI,EAAEa,KAAK,CAACb;AADsB,CAAZ,CAAxB;;AAGA,eAAeH,OAAO,CAACe,eAAD,EAAkB;AAAEd,EAAAA;AAAF,CAAlB,CAAP,CAAuCC,iBAAvC,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getTechs } from '../../actions/techActions';\n\nconst TechSelectOptions = ({ getTechs, tech: { techs, loading } }) => {\n  useEffect(() => {\n    getTechs();\n    //eslint-disable-next-line\n  }, []);\n\n  return (\n    !loading &&\n    techs !== null &&\n    techs.map((t) => (\n      <option key={t.id} value={`${t.firstName} ${t.lastName}`}>\n        {t.firstName} {t.lastName}\n      </option>\n    ))\n  );\n};\n\nTechSelectOptions.propTypes = {\n  tech: PropTypes.object.isRequired,\n  getTechs: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  tech: state.tech,\n});\nexport default connect(mapStateToProps, { getTechs })(TechSelectOptions);\n"]},"metadata":{},"sourceType":"module"}