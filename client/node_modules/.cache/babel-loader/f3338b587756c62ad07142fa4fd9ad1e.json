{"ast":null,"code":"import { GET_LOGS, SET_LOADING, LOGS_ERROR, ADD_LOG, DELETE_LOG, SET_CURRENT, CLEAR_CURRENT, UPDATE_LOG, SEARCH_LOGS } from './types'; // Get logs from server\n\nexport const getLogs = () => async dispatch => {\n  try {\n    setloading();\n    const res = await fetch('/logs');\n    const data = await res.json();\n    console.log(data);\n    dispatch({\n      type: GET_LOGS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n}; //Add new log\n\nexport const addLog = log => async dispatch => {\n  try {\n    setloading();\n    const res = await fetch('/logs', {\n      method: 'POST',\n      body: JSON.stringify(log),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await res.json();\n    console.log(data);\n    dispatch({\n      type: ADD_LOG,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n}; //Delete log from server\n\nexport const deleteLog = id => async dispatch => {\n  try {\n    setloading();\n    await fetch(`/logs/${id}`, {\n      method: 'DELETE'\n    });\n    dispatch({\n      type: DELETE_LOG,\n      payload: id\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n}; //Update log on server\n\nexport const updateLog = log => async dispatch => {\n  try {\n    setloading();\n    const res = await fetch(`/logs/${log.id}`, {\n      method: 'PUT',\n      body: JSON.stringify(log),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await res.json();\n    console.log('The value of the data var from res.json..');\n    console.log(data);\n    dispatch({\n      type: UPDATE_LOG,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n}; // Search server logs\n\nexport const searchLogs = text => async dispatch => {\n  try {\n    setloading();\n    const res = await fetch(`/logs?q=${text}`);\n    const data = await res.json();\n    dispatch({\n      type: SEARCH_LOGS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n}; //Set Current log\n\nexport const setCurrent = log => {\n  return {\n    type: SET_CURRENT,\n    payload: log\n  };\n}; // Clear current log\n\nexport const clearCurrent = () => {\n  return {\n    type: CLEAR_CURRENT\n  };\n}; // Set loading true\n\nexport const setloading = () => {\n  return {\n    type: SET_LOADING\n  };\n};","map":{"version":3,"sources":["/home/hiren/github/it-logger/client/src/actions/logActions.js"],"names":["GET_LOGS","SET_LOADING","LOGS_ERROR","ADD_LOG","DELETE_LOG","SET_CURRENT","CLEAR_CURRENT","UPDATE_LOG","SEARCH_LOGS","getLogs","dispatch","setloading","res","fetch","data","json","console","log","type","payload","err","response","statusText","addLog","method","body","JSON","stringify","headers","deleteLog","id","updateLog","searchLogs","text","setCurrent","clearCurrent"],"mappings":"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","sourcesContent":["import {\n  GET_LOGS,\n  SET_LOADING,\n  LOGS_ERROR,\n  ADD_LOG,\n  DELETE_LOG,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_LOG,\n  SEARCH_LOGS,\n} from './types';\n\n// Get logs from server\nexport const getLogs = () => async (dispatch) => {\n  try {\n    setloading();\n    const res = await fetch('/logs');\n    const data = await res.json();\n    console.log(data);\n    dispatch({\n      type: GET_LOGS,\n      payload: data,\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.statusText,\n    });\n  }\n};\n\n//Add new log\nexport const addLog = (log) => async (dispatch) => {\n  try {\n    setloading();\n    const res = await fetch('/logs', {\n      method: 'POST',\n      body: JSON.stringify(log),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    const data = await res.json();\n    console.log(data);\n    dispatch({\n      type: ADD_LOG,\n      payload: data,\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.statusText,\n    });\n  }\n};\n//Delete log from server\nexport const deleteLog = (id) => async (dispatch) => {\n  try {\n    setloading();\n    await fetch(`/logs/${id}`, {\n      method: 'DELETE',\n    });\n    dispatch({\n      type: DELETE_LOG,\n      payload: id,\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.statusText,\n    });\n  }\n};\n\n//Update log on server\nexport const updateLog = (log) => async (dispatch) => {\n  try {\n    setloading();\n    const res = await fetch(`/logs/${log.id}`, {\n      method: 'PUT',\n      body: JSON.stringify(log),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    const data = await res.json();\n    console.log('The value of the data var from res.json..');\n    console.log(data);\n    dispatch({\n      type: UPDATE_LOG,\n      payload: data,\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.statusText,\n    });\n  }\n};\n// Search server logs\nexport const searchLogs = (text) => async (dispatch) => {\n  try {\n    setloading();\n    const res = await fetch(`/logs?q=${text}`);\n    const data = await res.json();\n    dispatch({\n      type: SEARCH_LOGS,\n      payload: data,\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.statusText,\n    });\n  }\n};\n\n//Set Current log\nexport const setCurrent = (log) => {\n  return {\n    type: SET_CURRENT,\n    payload: log,\n  };\n};\n// Clear current log\n\nexport const clearCurrent = () => {\n  return {\n    type: CLEAR_CURRENT,\n  };\n};\n\n// Set loading true\nexport const setloading = () => {\n  return {\n    type: SET_LOADING,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}