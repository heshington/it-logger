{"ast":null,"code":"import { GET_LOGS, SET_LOADING, LOGS_ERROR, ADD_LOG, DELETE_LOG, UPDATE_LOG, SEARCH_LOGS, SET_CURRENT, CLEAR_CURRENT } from '../actions/types';\nconst initialState = {\n  logs: null,\n  current: null,\n  loading: false,\n  error: null\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case GET_LOGS:\n      return { ...state,\n        logs: action.payload,\n        loading: false\n      };\n\n    case ADD_LOG:\n      return { ...state,\n        logs: [action.payload, ...state.logs],\n        loading: false\n      };\n\n    case DELETE_LOG:\n      return { ...state,\n        logs: state.logs.filter(log => log._id !== action.payload),\n        loading: false\n      };\n\n    case UPDATE_LOG:\n      return { ...state,\n        logs: state.logs.map(log => log._id === action.payload._id ? action.payload : log)\n      };\n\n    case SEARCH_LOGS:\n      return { ...state,\n        logs: action.payload\n      };\n\n    case SET_CURRENT:\n      return { ...state,\n        current: action.payload\n      };\n\n    case CLEAR_CURRENT:\n      return { ...state,\n        current: null\n      };\n\n    case SET_LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    case LOGS_ERROR:\n      console.error(action.payload);\n      return { ...state,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/hiren/github/it-logger/client/src/reducers/logReducer.js"],"names":["GET_LOGS","SET_LOADING","LOGS_ERROR","ADD_LOG","DELETE_LOG","UPDATE_LOG","SEARCH_LOGS","SET_CURRENT","CLEAR_CURRENT","initialState","logs","current","loading","error","state","action","type","payload","filter","log","_id","map","console"],"mappings":"AAAA,SACEA,QADF,EAEEC,WAFF,EAGEC,UAHF,EAIEC,OAJF,EAKEC,UALF,EAMEC,UANF,EAOEC,WAPF,EAQEC,WARF,EASEC,aATF,QAUO,kBAVP;AAYA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,IADa;AAEnBC,EAAAA,OAAO,EAAE,IAFU;AAGnBC,EAAAA,OAAO,EAAE,KAHU;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;AAOA,gBAAe,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKhB,QAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELJ,QAAAA,IAAI,EAAEK,MAAM,CAACE,OAFR;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKT,OAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELJ,QAAAA,IAAI,EAAE,CAACK,MAAM,CAACE,OAAR,EAAiB,GAAGH,KAAK,CAACJ,IAA1B,CAFD;AAGLE,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKR,UAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELJ,QAAAA,IAAI,EAAEI,KAAK,CAACJ,IAAN,CAAWQ,MAAX,CAAmBC,GAAD,IAASA,GAAG,CAACC,GAAJ,KAAYL,MAAM,CAACE,OAA9C,CAFD;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKP,UAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELJ,QAAAA,IAAI,EAAEI,KAAK,CAACJ,IAAN,CAAWW,GAAX,CAAgBF,GAAD,IACnBA,GAAG,CAACC,GAAJ,KAAYL,MAAM,CAACE,OAAP,CAAeG,GAA3B,GAAiCL,MAAM,CAACE,OAAxC,GAAkDE,GAD9C;AAFD,OAAP;;AAMF,SAAKb,WAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELJ,QAAAA,IAAI,EAAEK,MAAM,CAACE;AAFR,OAAP;;AAIF,SAAKV,WAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELH,QAAAA,OAAO,EAAEI,MAAM,CAACE;AAFX,OAAP;;AAIF,SAAKT,aAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELH,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKV,WAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELF,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKV,UAAL;AACEoB,MAAAA,OAAO,CAACT,KAAR,CAAcE,MAAM,CAACE,OAArB;AACA,aAAO,EACL,GAAGH,KADE;AAELD,QAAAA,KAAK,EAAEE,MAAM,CAACE;AAFT,OAAP;;AAIF;AACE,aAAOH,KAAP;AArDJ;AAuDD,CAxDD","sourcesContent":["import {\n  GET_LOGS,\n  SET_LOADING,\n  LOGS_ERROR,\n  ADD_LOG,\n  DELETE_LOG,\n  UPDATE_LOG,\n  SEARCH_LOGS,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n} from '../actions/types';\n\nconst initialState = {\n  logs: null,\n  current: null,\n  loading: false,\n  error: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_LOGS:\n      return {\n        ...state,\n        logs: action.payload,\n        loading: false,\n      };\n    case ADD_LOG:\n      return {\n        ...state,\n        logs: [action.payload, ...state.logs],\n        loading: false,\n      };\n    case DELETE_LOG:\n      return {\n        ...state,\n        logs: state.logs.filter((log) => log._id !== action.payload),\n        loading: false,\n      };\n    case UPDATE_LOG:\n      return {\n        ...state,\n        logs: state.logs.map((log) =>\n          log._id === action.payload._id ? action.payload : log\n        ),\n      };\n    case SEARCH_LOGS:\n      return {\n        ...state,\n        logs: action.payload,\n      };\n    case SET_CURRENT:\n      return {\n        ...state,\n        current: action.payload,\n      };\n    case CLEAR_CURRENT:\n      return {\n        ...state,\n        current: null,\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case LOGS_ERROR:\n      console.error(action.payload);\n      return {\n        ...state,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}