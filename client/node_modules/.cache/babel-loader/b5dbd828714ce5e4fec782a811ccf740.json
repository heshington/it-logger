{"ast":null,"code":"import { GET_LOGS, SET_LOADING, LOGS_ERROR, ADD_LOG, DELETE_LOG, SET_CURRENT, CLEAR_CURRENT, UPDATE_LOG, SEARCH_LOGS } from '../actions/types';\nconst inititalState = {\n  logs: null,\n  current: null,\n  loading: false,\n  error: null\n}; // Get logs from server\n\nexport default ((state = inititalState, action) => {\n  switch (action.type) {\n    case GET_LOGS:\n      return { ...state,\n        logs: action.payload,\n        loading: false\n      };\n\n    case ADD_LOG:\n      return { ...state,\n        logs: [...state.logs, action.payload],\n        loading: false\n      };\n\n    case DELETE_LOG:\n      {\n        return { ...state,\n          logs: state.logs.filter(log => log._id !== action.payload),\n          loading: false\n        };\n      }\n\n    case UPDATE_LOG:\n      return { ...state,\n        logs: state.logs.map(log => log.id === action.payload.id ? action.payload : log)\n      };\n\n    case SEARCH_LOGS:\n      {\n        return { ...state,\n          logs: action.payload\n        };\n      }\n\n    case SET_CURRENT:\n      {\n        return { ...state,\n          current: action.payload\n        };\n      }\n\n    case CLEAR_CURRENT:\n      {\n        return { ...state,\n          current: null\n        };\n      }\n\n    case SET_LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    case LOGS_ERROR:\n      console.error(action.payload);\n      return { ...state,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/hiren/github/it-logger/client/src/reducers/logReducer.js"],"names":["GET_LOGS","SET_LOADING","LOGS_ERROR","ADD_LOG","DELETE_LOG","SET_CURRENT","CLEAR_CURRENT","UPDATE_LOG","SEARCH_LOGS","inititalState","logs","current","loading","error","state","action","type","payload","filter","log","_id","map","id","console"],"mappings":"AAAA,SACEA,QADF,EAEEC,WAFF,EAGEC,UAHF,EAIEC,OAJF,EAKEC,UALF,EAMEC,WANF,EAOEC,aAPF,EAQEC,UARF,EASEC,WATF,QAUO,kBAVP;AAYA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,IAAI,EAAE,IADc;AAEpBC,EAAAA,OAAO,EAAE,IAFW;AAGpBC,EAAAA,OAAO,EAAE,KAHW;AAIpBC,EAAAA,KAAK,EAAE;AAJa,CAAtB,C,CAMA;;AACA,gBAAe,CAACC,KAAK,GAAGL,aAAT,EAAwBM,MAAxB,KAAmC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKhB,QAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELJ,QAAAA,IAAI,EAAEK,MAAM,CAACE,OAFR;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKT,OAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELJ,QAAAA,IAAI,EAAE,CAAC,GAAGI,KAAK,CAACJ,IAAV,EAAgBK,MAAM,CAACE,OAAvB,CAFD;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKR,UAAL;AAAiB;AACf,eAAO,EACL,GAAGU,KADE;AAELJ,UAAAA,IAAI,EAAEI,KAAK,CAACJ,IAAN,CAAWQ,MAAX,CAAmBC,GAAD,IAASA,GAAG,CAACC,GAAJ,KAAYL,MAAM,CAACE,OAA9C,CAFD;AAGLL,UAAAA,OAAO,EAAE;AAHJ,SAAP;AAKD;;AACD,SAAKL,UAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELJ,QAAAA,IAAI,EAAEI,KAAK,CAACJ,IAAN,CAAWW,GAAX,CAAgBF,GAAD,IACnBA,GAAG,CAACG,EAAJ,KAAWP,MAAM,CAACE,OAAP,CAAeK,EAA1B,GAA+BP,MAAM,CAACE,OAAtC,GAAgDE,GAD5C;AAFD,OAAP;;AAMF,SAAKX,WAAL;AAAkB;AAChB,eAAO,EACL,GAAGM,KADE;AAELJ,UAAAA,IAAI,EAAEK,MAAM,CAACE;AAFR,SAAP;AAID;;AACD,SAAKZ,WAAL;AAAkB;AAChB,eAAO,EACL,GAAGS,KADE;AAELH,UAAAA,OAAO,EAAEI,MAAM,CAACE;AAFX,SAAP;AAID;;AACD,SAAKX,aAAL;AAAoB;AAClB,eAAO,EACL,GAAGQ,KADE;AAELH,UAAAA,OAAO,EAAE;AAFJ,SAAP;AAID;;AACD,SAAKV,WAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELF,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKV,UAAL;AACEqB,MAAAA,OAAO,CAACV,KAAR,CAAcE,MAAM,CAACE,OAArB;AACA,aAAO,EACL,GAAGH,KADE;AAELD,QAAAA,KAAK,EAAEE,MAAM,CAACE;AAFT,OAAP;;AAIF;AACE,aAAOH,KAAP;AAzDJ;AA2DD,CA5DD","sourcesContent":["import {\n  GET_LOGS,\n  SET_LOADING,\n  LOGS_ERROR,\n  ADD_LOG,\n  DELETE_LOG,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_LOG,\n  SEARCH_LOGS,\n} from '../actions/types';\n\nconst inititalState = {\n  logs: null,\n  current: null,\n  loading: false,\n  error: null,\n};\n// Get logs from server\nexport default (state = inititalState, action) => {\n  switch (action.type) {\n    case GET_LOGS:\n      return {\n        ...state,\n        logs: action.payload,\n        loading: false,\n      };\n    case ADD_LOG:\n      return {\n        ...state,\n        logs: [...state.logs, action.payload],\n        loading: false,\n      };\n    case DELETE_LOG: {\n      return {\n        ...state,\n        logs: state.logs.filter((log) => log._id !== action.payload),\n        loading: false,\n      };\n    }\n    case UPDATE_LOG:\n      return {\n        ...state,\n        logs: state.logs.map((log) =>\n          log.id === action.payload.id ? action.payload : log\n        ),\n      };\n    case SEARCH_LOGS: {\n      return {\n        ...state,\n        logs: action.payload,\n      };\n    }\n    case SET_CURRENT: {\n      return {\n        ...state,\n        current: action.payload,\n      };\n    }\n    case CLEAR_CURRENT: {\n      return {\n        ...state,\n        current: null,\n      };\n    }\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case LOGS_ERROR:\n      console.error(action.payload);\n      return {\n        ...state,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}